{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","getRecipes","useEffect","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mPAmBeA,EAfA,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,MAAMC,EAAgC,EAAhCA,SAASC,EAAuB,EAAvBA,MAAMC,EAAiB,EAAjBA,YAClC,OACJ,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IACL,6BACKG,EAAYI,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAGxB,4BAAIR,IACJ,qBAAKG,UAAWC,IAAMH,MAAOQ,IAAKR,EAAOS,IAAI,SC6ClCC,G,MAvDH,WAEZ,IAFkB,EAKYC,mBAAS,IALrB,mBAKXC,EALW,KAKFC,EALE,OAMUF,mBAAS,IANnB,mBAMXG,EANW,KAMHC,EANG,OAOQJ,mBAAS,WAPjB,mBAOXK,EAPW,KAOJC,EAPI,KAkBZC,GAJNC,qBAAW,WACTD,MACC,CAACF,IAEY,uCAAG,8BAAAI,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAjBf,WAiBe,oBAhBd,qCAeG,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGnBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAJE,2CAAH,sDAmBd,OACE,sBAAKvB,UAAU,MAAf,UACE,uBAAM0B,SATM,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAMqBb,UAAU,cAArC,UACE,uBAAOA,UAAU,aAAa6B,KAAK,OAAOC,MAAOlB,EAAQmB,SAf5C,SAAAJ,GACrBd,EAAUc,EAAEK,OAAOF,UAeX,wBAAS9B,UAAU,gBAAgB6B,KAAK,SAAxC,uBAEF,qBAAK7B,UAAU,UAAf,SACAU,EAAQP,KAAI,SAAAD,GAAM,OACjB,cAAC,EAAD,CAAkCN,MAAOM,EAAOA,OAAO+B,MAAOpC,SAAUK,EAAOA,OAAOL,SAAUC,MAAOI,EAAOA,OAAOJ,MACrHC,YAAaG,EAAOA,OAAOH,aADdG,EAAOA,OAAO+B,iBCrCnBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.98eec339.chunk.js","sourcesContent":["import React from \"react\";\r\nimport style from './recipe.module.css';\r\n\r\n\r\nconst Recipe = ({title,calories,image,ingredients}) => {\r\n    return(\r\n<div className={style.recipe}>\r\n    <h1>{title}</h1>\r\n    <ol>\r\n        {ingredients.map(ingredient => (\r\n            <li>{ingredient.text}</li>\r\n        ))}\r\n    </ol>\r\n    <p>{calories}</p>\r\n    <img className={style.image} src={image} alt=\"\" />\r\n</div>\r\n    );\r\n};\r\n\r\nexport default Recipe;","import React,{useEffect, useState } from \"react\";\nimport Recipe from './Recipe';\nimport './App.css';\n\nconst App = () => {\n\nconst APP_ID = '91654746';\nconst APP_KEY = \"d80659353fb776df9631ec44c0f2e919\";\n\nconst [recipes, setRecipes] = useState([]);\nconst [search, setSearch] = useState(\"\");\nconst [query, setQuery] = useState('chicken');\n\n// eslint-disable-next-line\nconst exampleReq = \n\n\n\nuseEffect( () => {\n  getRecipes();\n}, [query]);\n\nconst getRecipes = async () => {\n  const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n  const data = await response.json();\nsetRecipes(data.hits);\nconsole.log(data.hits);\n\n}\nconst updateSearch = e => {\nsetSearch(e.target.value);\n\n}\n\nconst getSearch = e => {\n  e.preventDefault();\n  setQuery(search);\n  setSearch('');\n}\n\n\n  return(\n    <div className=\"App\">\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} />\n        <button  className=\"search-button\" type=\"submit\">Search</button>   \n      </form>\n      <div className=\"recipes\">\n     {recipes.map(recipe => (\n       <Recipe key={recipe.recipe.label} title={recipe.recipe.label} calories={recipe.recipe.calories} image={recipe.recipe.image} \n       ingredients={recipe.recipe.ingredients} />\n     ))}\n     </div>\n    </div>\n  );\n\n};\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__BmMCj\",\"image\":\"recipe_image__I9r5a\"};"],"sourceRoot":""}